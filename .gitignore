# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

import time,sys

account_name = {'1' : "Lich", '2' : 2, '3' : 3, '4' : 4, '5' : 5}
account_password = {'1' : "wzq69808", '2' : 2, '3' : 3, '4' : 4, '5' : 5}
user_name = raw_input ("If you do not have a account, please type NEW, if you do type your user name:\n")
if str (user_name) != account_name ['1'] or user_name == account_name ['2'] or user_name == account_name ['3'] or user_name == account_name ['4'] or user_name == account_name ['5']:
    user_name = raw_input ("You do not have a account please type NEW to log in:\n")
if str (user_name) == "NEW":
    new_user = raw_input ("please type a new user name:\n")
    # account_name ['1'] = new_user
    if new_user == account_name['1'] or user_name == account_name['2'] or user_name == account_name['3'] or user_name == account_name['4'] or user_name == account_name['5']:
        old_password = raw_input("you already have a account please type your password:\n")
        if old_password == account_password['1'] or old_password == account_password['2'] or old_password == \
                account_password['3'] or old_password == account_password['4'] or old_password == account_password['5']:
            print ("wait a second")
            for t in range(3):
                time.sleep(1)
                sys.stdout.write('.')
                sys.stdout.flush()
            time.sleep(1)
            print ("\n")

            sys.stdout.write('Hi ')
            time.sleep(0.5)
            sys.stdout.write("%s " % new_user)
            time.sleep(0.5)
            sys.stdout.write('thanks ')
            time.sleep(0.5)
            sys.stdout.write("for ")
            time.sleep(0.5)
            sys.stdout.write('you ')
            time.sleep(0.5)
            sys.stdout.write("landing ")
            time.sleep(1)
    else:
        new_password = raw_input ("your password\n")
        report_password = raw_input ("please report your password\n")
        for i in range (100):
            if new_password == report_password:
                # account_password ['1'] = new_password
                print ("wait a second")
                for t in range (3):
                    time.sleep(1)
                    sys.stdout.write('.')
                    sys.stdout.flush()
                time.sleep(1)
                print ("\n")
                sys.stdout.write('Hi ')
                time.sleep(0.5)
                sys.stdout.write("%s " % new_user)
                time.sleep(0.5)
                sys.stdout.write('thanks ')
                time.sleep(0.5)
                sys.stdout.write("for ")
                time.sleep(0.5)
                sys.stdout.write('you ')
                time.sleep(0.5)
                sys.stdout.write("landing ")
                time.sleep(1)
                break
        else:
            report_password = raw_input ("please type your password again\n")
else:
    if user_name == account_name ['1'] or user_name == account_name ['2'] or user_name == account_name ['3'] or user_name == account_name ['4'] or user_name == account_name ['5']:
        old_password = raw_input ("Your password:\n")
        if old_password == account_password ['1'] or old_password == account_password ['2'] or old_password == account_password ['3'] or old_password == account_password ['4'] or old_password == account_password ['5']:
            print ("Laoding")
            for t in range (3):
                time.sleep(1)
                sys.stdout.write('.')
                sys.stdout.flush()
            time.sleep(1)
            print ("\n")

            sys.stdout.write('Hi ')
            time.sleep(0.5)
            sys.stdout.write("%s " % user_name)
            time.sleep(0.5)
            sys.stdout.write('thanks ')
            time.sleep(0.5)
            sys.stdout.write("for ")
            time.sleep(0.5)
            sys.stdout.write('you ')
            time.sleep(0.5)
            sys.stdout.write("landing ")
            time.sleep(1)
        else:
            s_report_password = raw_input("please report your password:\n")
            for i in range(100):
                if s_report_password == old_password:
                    # account_password ['1'] = new_password
                    print ("wait a second")
                    for t in range(3):
                        time.sleep(1)
                        sys.stdout.write('.')
                        sys.stdout.flush()
                    time.sleep(1)
                    print ("\n")
                    sys.stdout.write('Hi ')
                    time.sleep(0.5)
                    sys.stdout.write("%s " % user_name)
                    time.sleep(0.5)
                    sys.stdout.write('thanks ')
                    time.sleep(0.5)
                    sys.stdout.write("for ")
                    time.sleep(0.5)
                    sys.stdout.write('you ')
                    time.sleep(0.5)
                    sys.stdout.write("landing ")
                    time.sleep(1)
                    break
